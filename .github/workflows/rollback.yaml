name: Rollback Deployment

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: "Tag of the version to rollback to (e.g., v1.2.3)"
        required: true
      environment:
        description: "Environment to rollback (dev, uat, prod)"
        required: true
        type: choice
        options:
          - dev
          - uat
          - prod

jobs:
  rollback:
    name: Rollback to ${{ github.event.inputs.version_tag }}
    runs-on: ubuntu-latest
    env:
      ENV: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version_tag }}
          token: ${{ secrets.GIT_HUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Set and Export Environment Variables
        run: |
          if [[ "$ENV" == "dev" ]]; then
            echo "client_id=${{ secrets.DEV_CONNECTED_APP_CLIENT_ID }}" >> $GITHUB_ENV
            echo "client_secret=${{ secrets.DEV_CONNECTED_APP_CLIENT_SECRET }}" >> $GITHUB_ENV
            echo "cloudhub_env=${{ vars.DEV_CLOUDHUBENVIRONMENT }}" >> $GITHUB_ENV
            echo "target=${{ vars.DEV_TARGET }}" >> $GITHUB_ENV
            echo "env_name=${{ vars.DEV_ENV }}" >> $GITHUB_ENV
            echo "key=${{ vars.DEV_KEY }}" >> $GITHUB_ENV
          elif [[ "$ENV" == "uat" ]]; then
            echo "client_id=${{ secrets.UAT_CONNECTED_APP_CLIENT_ID }}" >> $GITHUB_ENV
            echo "client_secret=${{ secrets.UAT_CONNECTED_APP_CLIENT_SECRET }}" >> $GITHUB_ENV
            echo "cloudhub_env=${{ vars.UAT_CLOUDHUBENVIRONMENT }}" >> $GITHUB_ENV
            echo "target=${{ vars.UAT_TARGET }}" >> $GITHUB_ENV
            echo "env_name=${{ vars.UAT_ENV }}" >> $GITHUB_ENV
            echo "key=${{ vars.UAT_KEY }}" >> $GITHUB_ENV
          elif [[ "$ENV" == "prod" ]]; then
            echo "client_id=${{ secrets.PROD_CONNECTED_APP_CLIENT_ID }}" >> $GITHUB_ENV
            echo "client_secret=${{ secrets.PROD_CONNECTED_APP_CLIENT_SECRET }}" >> $GITHUB_ENV
            echo "cloudhub_env=${{ vars.PROD_CLOUDHUBENVIRONMENT }}" >> $GITHUB_ENV
            echo "target=${{ vars.PROD_TARGET }}" >> $GITHUB_ENV
            echo "env_name=${{ vars.PROD_ENV }}" >> $GITHUB_ENV
            echo "key=${{ vars.PROD_KEY }}" >> $GITHUB_ENV
          else
            echo "❌ Unknown environment: $ENV"
            exit 1
          fi

      - name: Validate Required Variables
        run: |
          if [[ -z "${{ env.target }}" || -z "${{ env.client_id }}" || -z "${{ env.client_secret }}" || -z "${{ env.cloudhub_env }}" || -z "${{ env.env_name }}" || -z "${{ env.key }}" ]]; then
            echo "❌ One or more required environment values are missing!"
            echo "target=${{ env.target }}"
            echo "client_id=${{ env.client_id }}"
            echo "client_secret=${env.client_secret}"
            echo "cloudhub_env=${{ env.cloudhub_env }}"
            echo "env_name=${{ env.env_name }}"
            echo "key=${env.key}"
            exit 1
          fi

      - name: Deploy Rollback Version
        run: |
          mvn clean deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
            -Dclient.id="${{ env.client_id }}" \
            -Dclient.secret="${{ env.client_secret }}" \
            -DcloudhubEnvironment="${{ env.cloudhub_env }}" \
            -Dtarget="${{ env.target }}" \
            -Denv="${{ env.env_name }}" \
            -Dkey="${{ env.key }}"
